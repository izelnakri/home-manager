https://www.youtube.com/watch?v=30WTWkFe910&t=762s


folks-inspect requires: 
(folks-inspect:347289): GLib-GIO-ERROR **: 17:56:35.335: Settings schema 'org.freedesktop.folks' is not installed
Probably gtk3-gtk4 not installed issue



get scope structs with llvm debug/DAP & bugstalker
Implement DAP/linter(deno and eslint linter at the same time(start with use deno always, if no deno ref, use eslint)) for qunitx

Samsung contacts -> check folks -> rust integration with Vala

Obsidian features in vim: Backlinking/navigation, Daily journaling(navigation), tags/tagsearch, Dataview for tags etc, Obsidian view, backup
NOTE: Winner so far: (for offline setup qwen:0.5(4b ok speed) | wizardllm2, find fast multimodal)
Then openai or wizardllm2 or codeqwen chat, dolphin-llama3, codegemma(?)

- try 	Starling-LM-7B-beta, OpenChat-3.5-0106, Gemma 7B, OpenHermes, Gemma, QWen(4b)
- try openai for paid service

when I hit enter on second line autotab doesnt work in neovim!
create a browsh proxy script to see (doesnt run local files) -> use carbonyl instead(needs keymaps)
I can create also views with nui | or use them as Edgy window. vsplit window is better

Install GNOME for UI/config standards: Alarm, Notification center, Reminder, Todo/Calendar implementation, battery notification

# LLM Leaderboard: https://arena.lmsys.org/

Make browsh render inside node.js process -> make the node.js process handle browser events | Code this basic RPC communication over websockets

Implement AI chat - Build the TUI with w3m or a ratatui alternative in TypeScript, or build directly in Rust
- or suggest a plugin interface for oatmeal

Setup DAP & testing for node & deno for memoria, qunitx
devdocs
Linting, show errors better on Trouble v3
Markdown autoformat and toggle preview

devdocs, ai, setup linting/lsp/debug better
dropbox sync, pocket NAS


Inline LSP documentation is great, we need also a better :h interface:
That shows up lua plugin(readme), luadocs, rustdoc, crates, hexdocs, mdn JS docs, JS plugin readme. Needs devdocs like search/devdocs-like plugin(that includes all plugin/docsets)

Try GitUI one more time, create github issues, create Github Issues for LazyGit maybe use Magit more as a last resort
Telescope up/down

mako, rofi & other tools
complete memoria

json <> nix <> pkl ok
however yaml is problematic in nix(?) find way to read and turn it into nix

- fix ironbar calendar styling

# Move from lightdm to GDM
# top bar email notifications(inbox, spam), discord notifications
# make dropbox work

# Gnome setup
# Research overlays and nix pill derivations more, make raspberry pi touchscreen work, make display Manager/Sway/Hyperland work
# system.userActivationScripts(?) or home.activation !! -> to make ~/.config/home-manager available as a checked out/git pull repository
# transfer private ssh and gpg key securely to new server

- make touchscreen work
- make a static ip so people can log-in from a cheap VPN(also make it run nix)
- investigate VR window manager
- set up android dev
- add swap to raspberry pi 4, make btrfs, install the screen, install home-manager on nixos-build, also allow remote updates

- swap file config: https://gist.github.com/plmercereau/0c8e6ed376dc77617a7231af319e3d29

"${builtins.fetchGit { url = "https://github.com/NixOS/nixos-hardware.git"; }}/raspberry-pi/4"

how to connect to rpi from usbc
Important: RPI3 USB-Gadget mode: https://discourse.nixos.org/t/looking-for-help-to-create-a-raspberry-pi-with-usb-ethernet/27039/9

- make it so that ~/.config/home-manager has the latest git pulled version always
- remove sudo password need for izelnakri

home-manager.users.tmplt.xsession = {
  enable = true;
  windowManager.xmonad = {
    enable = true;
    enableContribAndExtras = true;
    extraPackages = self: [ self.xmobar ];
  };
};

xsession!! is very important

services.xserver = {
  enable = true;
  autorun = false;
  displayManager.startx.enable = true;
};


   xserver = {
        enable = true;
  #      autorun = false;
        videoDrivers = [ "nvidia" ];

        layout = "us";
        xkbOptions = "eurosign:e";
        libinput = {
          enable = true;
          disableWhileTyping = true;
          naturalScrolling = true;
          additionalOptions = ''
            Option "PalmDetection" "True"
          '';
        };
        desktopManager = {
          default = "none";
          xterm.enable = false;
        };
        displayManager = {
          lightdm = {
            enable = true;
            greeter.enable = false;
            autoLogin.enable = true;
            autoLogin.user = "mudrii";
          };
        };

        windowManager = {
          default = "i3";
          i3.enable = true;
          i3.package = pkgs.i3-gaps;
          i3.extraPackages = with pkgs; [
            dmenu #application launcher most people use
            i3lock #default i3 screen locker
            i3status-rust
            i3-gaps
            i3lock-fancy
            rofi
...
...
...



  # Enable the X11 windowing system.
  services.xserver = {
    enable = true;
    layout = "us";
    videoDrivers = [ "nvidia" ];
    displayManager.lightdm.enable = true;
    windowManager.i3.enable = true;
  };


  hardware.opengl.setLdLibraryPath = true;

# open it in relevant pane
#
# tmux kill-session -t volume || alacritty -e tmux new-session -s volume "zsh -c 'ls -lah .';tmux split-pane -h; tail -f ~/FOOD"

https://blog.habets.se/2022/02/SSH-over-Bluetooth-cleanly.html

- Do this tutorial: https://www.shuttle.rs/blog/2023/10/16/graphql-in-rust
